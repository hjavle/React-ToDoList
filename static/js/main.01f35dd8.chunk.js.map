{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","console","log","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01f35dd8.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Form = ({ setInputText, todos, setTodos, inputText, setStatus }) => {\n  //Here I can write javascript code and function\n  const inputTextHandler = (e) =>{\n    console.log(e.target.value);\n    setInputText(e.target.value);\n  };\n  const submitTodoHandler = (e) => {\n    e.preventDefault();\n    setTodos([\n      ...todos,{text:inputText, completed: false, id: Math.random() * 1000 }\n\n    ]);\n    setInputText(\"\");\n  };\n  const statusHandler = (e) =>{\n    setStatus(e.target.value);\n  }\n    return (\n      <form>\n        <input value={inputText} \n          onChange={inputTextHandler} \n          type=\"text\" \n          className=\"todo-input\" />\n        <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n        <i className=\"fas fa-plus-square\"></i>\n      </button>\n      <div className=\"select\">\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\n          <option value=\"all\">All</option>\n          <option value=\"completed\">Completed</option>\n          <option value=\"uncompleted\">Uncompleted</option>\n        </select>\n      </div>\n    </form>\n\n    );\n};\nexport default Form;","import React from \"react\";\n\nconst Todo = ({text,todo,todos,setTodos}) => {\n    //Event\n    const deleteHandler = () =>{\n        setTodos(todos.filter((el)=> el.id !==todo.id));\n    };\n    const completeHandler = () => {\n        setTodos(todos.map((item)=> {\n            if (item.id === todo.id){\n                return{\n                    ...item, completed: !item.completed\n                };\n            }\n            return item;\n        })\n        );\n    };\n    return(\n        <div className = \"todo\">\n            <li className = {`todo-item ${todo.completed ? \"completed\" :\"\"}`}>{text}</li>\n            <button onClick = {completeHandler} className= \"complete-btn\" >\n                <i className= \"fas fa-check\"></i>\n            </button>\n            <button onClick={deleteHandler} className= \"trash-btn\">\n                <i className= \"fas fa-trash\"></i>\n            </button>\n\n        </div>\n\n    );\n}\nexport default Todo;","import React, { useState } from \"react\";\n// import components\nimport Todo from './Todo';\n\nconst TodoList = ({ todos, setTodos, filteredTodos }) =>{\n    return(\n        <div className=\"todo-container\">\n            <ul className=\"todo-list\">\n                {filteredTodos.map(todo =>(\n                    <Todo \n                        setTodos={setTodos} \n                        todos ={todos} \n                        key={todo.id} \n                        todo={todo}\n                        text={todo.text}\n                    />\n                ))}\n            </ul>\n        </div>\n    );\n};\nexport default TodoList;","import React, {useState,useEffect} from \"react\";\nimport './App.css';\n// importing components\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\nfunction App() {\n \n// state stuff\n  const [ inputText, setInputText] = useState(\"\");\n  const [ todos, setTodos ] = useState([]);\n  const [ status, setStatus] = useState([\"all\"]);\n  const [ filteredTodos, setFilteredTodos] = useState([]);\n// Run once when the app starts\nuseEffect(()=>{\n  getLocalTodos();\n}, []);\n  // Use Effect\n  useEffect(() =>{\n   filterHandler();\n   saveLocalTodos();\n  }, [todos, status]);\n  // functions\n  const filterHandler = () =>{\n    switch(status){\n      case \"completed\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === true ));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === false ));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n  // Save to local\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n     let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n     setTodos(todoLocal);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n       <header>\n  <h1> To Do List </h1>\n    </header>\n      <Form \n        inputText = {inputText}\n        todos ={todos} \n        setTodos={setTodos} \n        setInputText = {setInputText}\n        setStatus = {setStatus}\n        \n      />\n      <TodoList \n        filteredTodos = {filteredTodos}\n        setTodos={setTodos} \n        todos ={todos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}